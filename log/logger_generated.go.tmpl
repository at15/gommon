package log

import (
    "fmt"
    "time"
)

{{ range .}}
func (l *Logger) Is{{.}}Enabled() bool {
    return l.level >= {{.}}Level
}

func (l *Logger) {{.}}(args ...interface{}) {
	if l.level < {{.}}Level {
		return
	}
	if !l.source {
		l.h.HandleLog({{.}}Level, time.Now(), fmt.Sprint(args...), "", l.fields, nil)
	} else {
		l.h.HandleLog({{.}}Level, time.Now(), fmt.Sprint(args...), caller(), l.fields, nil)
	}
}

func (l *Logger) {{.}}f(format string, args ...interface{}) {
	if l.level < {{.}}Level {
		return
	}
	if !l.source {
		l.h.HandleLog({{.}}Level, time.Now(), fmt.Sprintf(format, args...), "", l.fields, nil)
	} else {
		l.h.HandleLog({{.}}Level, time.Now(), fmt.Sprintf(format, args...), caller(), l.fields, nil)
	}
}

func (l *Logger) {{.}}F(msg string, fields ...Field) {
	if l.level < {{.}}Level {
		return
	}
	if !l.source {
		l.h.HandleLog({{.}}Level, time.Now(), msg, "", l.fields, fields)
	} else {
		l.h.HandleLog({{.}}Level, time.Now(), msg, caller(), l.fields, fields)
	}
}
{{ end }}
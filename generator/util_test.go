package generator

import (
	"io"
	"os"
	"testing"
)

// TODO: assert
func Test_Walk(t *testing.T) {
	//files := walk("../config", defaultIgnores)
	files := Walk("testdata", DefaultIgnores())
	t.Log(files)
}

// https://github.com/dyweb/gommon/issues/41
func Test_writeFile(t *testing.T) {
	var magic = `// Code generated by gommon from pkg/client/gommon.yml DO NOT EDIT.
package client
`
	writeFile("gommon_generated.go", []byte(magic))
	ioUtilWriteFile("gommon_gnerated2.go", []byte(magic), 0666)
	ioUtilWriteFile("gommon_gnerated3.go", []byte(magic), 0664)
}

// copy from ioutil
func ioUtilWriteFile(filename string, data []byte, perm os.FileMode) error {
	f, err := os.OpenFile(filename, os.O_WRONLY|os.O_CREATE|os.O_TRUNC, perm)
	if err != nil {
		return err
	}
	n, err := f.Write(data)
	if err == nil && n < len(data) {
		err = io.ErrShortWrite
	}
	if err1 := f.Close(); err == nil {
		err = err1
	}
	return err
}
